openapi: 3.0.0
servers:
  - url: /v0
info:
  version: "0.0.0"
  title: URL shortener API
  description: >-
    API for the URL shortener service.
paths:
  /links:
    post:
      summary: 'Create a new short link'
      description: 'Create a new short link'
      tags: ['Links']
      requestBody:
        content:
          'application/json':
            schema:
              type: "object"
              required: ['destination']
              properties:
                destination:
                  type: 'string'
                  format: 'uri'
                  description: 'The destination URL the short link will to point to'
                expiry:
                  type: 'string'
                  format: 'date-time'
                  description: 'An optional expiry date for the validity of the short link'
                  nullable: true
                password:
                  type: 'string'
                  format: 'password'
                  description: 'An optional password to protect the link'
                  nullable: true
      responses:
        '201':
          description: Created
          content:
            'application/json':
              schema: 
                $ref: '#/components/schemas/Link'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
          
    get:
      summary: Get all the created links
      description: Get all the created links
      tags: ['Links']
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: 'array'
                items:
                  $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/Unauthorized'
          
  /links/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The link UUID 
        schema:
          type: string
    get:
      summary: Get one of the created links
      description: Get one of the created links
      tags: ['Links']
      responses:
        '200':
          description: OK
          content:
            'applcation/json':
              schema:
                $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/Unauthorized'
    patch:
      summary: Update one of the created links
      description: Update one of the created links
      tags: ['Links']
      requestBody:
        content:
          'application/json':
            schema:
              type: 'object'
              properties:
                destination:
                  description: 'Update the destination URL'
                  type: 'string'
                  format: 'uri'
                expiry:
                  description: 'Update the expiry date of the link'
                  type: 'string'
                  format: 'date-time'
                password:
                  description: >-
                    Update or add a password to the link. If it's an update, the previousPassword field is mandatory
                  type: 'string'
                  format: 'password'
                previousPassword:
                  description: 'Required only if updating the password'
                  type: 'string'
                  format: 'password'
      responses:
        '200':
          description: 'OK'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Link'
                
    delete:
      summary: "Delete an existing link"
      description: "Delete an existing link"
      tags: ['Links']
      responses:
        '200':
          description: 'OK. Returns the deleted link'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Link'
  /links/{id}/verify:
    parameters:
      - name: id
        in: path
        required: true
        description: The link UUID 
        schema:
          type: string
    post:
      summary: "Verify a protected link"
      description: "Verify a protected link"
      tags: ['Links']
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              type: "object"
              required: ['password']
              properties:
                password:
                  type: string
                  format: password
      responses:
        '302':
          description: "Redirect to the destination URL"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
          
    
components:
  schemas:
    Link:
      type: "object"
      properties:
        id:
          description: 'The short link ID'
          type: 'string'
          format: 'uuid'
        author:
          description: 'The user ID of the creator of the link'
          type: 'string'
          format: 'uuid'
        created:
          description: 'The createion date of the short link'
          type: 'string'
          format: 'date-time'
        expiry:
          description: 'The expiry date of the short link, if any'
          type: 'string'
          format: 'date-time'
          nullable: true
        link:
          description: 'The short link'
          type: 'string'
          format: 'uri'
        destination:
          description: 'The destination URL the short link points to'
          type: 'string'
          format: 'uri'
        protected:
          description: 'Whether or not the link is password protected'
          type: 'boolean'
        statistics:
          description: 'Insights about the link usage'
          type: 'object'
          properties:
            clicks:
              description: 'How many time the link has been clicked'
              type: 'number'
              format: 'int64'

    Error:
      type: "object"
      properties:
        error:
          type: 'string'
        message:
          type: 'string'
  responses:
    BadRequest:
      description: 'Bad request'
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: 'Unauthorized'
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'